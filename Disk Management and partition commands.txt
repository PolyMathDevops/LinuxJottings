***********************************************************************************************************************************************
Disk Managament

Here I am using aws so I have attached the new volume of 50G on my server and done lsblk

ubuntu@ip-172-31-29-55:~$ lsblk
NAME     MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0      7:0    0 25.1M  1 loop /snap/amazon-ssm-agent/5656
loop1      7:1    0 55.6M  1 loop /snap/core18/2560
loop2      7:2    0 55.6M  1 loop /snap/core18/2566
loop3      7:3    0   62M  1 loop /snap/core20/1611
loop4      7:4    0 63.2M  1 loop /snap/core20/1623
loop5      7:5    0 79.9M  1 loop /snap/lxd/22923
loop6      7:6    0  103M  1 loop /snap/lxd/23541
loop8      7:8    0   47M  1 loop /snap/snapd/16292
loop9      7:9    0   48M  1 loop /snap/snapd/16778
xvda     202:0    0    8G  0 disk
├─xvda1  202:1    0  7.9G  0 part /
├─xvda14 202:14   0    4M  0 part
└─xvda15 202:15   0  106M  0 part /boot/efi
xvdf     202:80   0   50G  0 disk

so xvdf is the harddisk in which we will work

fdisk -l will show the list of the hard drive in more detail format with the information of the bytes and sectors used in hard disk with the disk label type.

root@ip-172-31-29-55:~# fdisk -l
Disk /dev/loop0: 25.11 MiB, 26324992 bytes, 51416 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop1: 55.56 MiB, 58261504 bytes, 113792 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop2: 55.56 MiB, 58261504 bytes, 113792 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop3: 61.96 MiB, 64966656 bytes, 126888 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop4: 63.22 MiB, 66293760 bytes, 129480 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop5: 79.95 MiB, 83832832 bytes, 163736 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop6: 102.98 MiB, 107986944 bytes, 210912 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/xvda: 8 GiB, 8589934592 bytes, 16777216 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: 3686890E-384D-47FF-8376-B554064EE59B

Device       Start      End  Sectors  Size Type
/dev/xvda1  227328 16777182 16549855  7.9G Linux filesystem
/dev/xvda14   2048    10239     8192    4M BIOS boot
/dev/xvda15  10240   227327   217088  106M EFI System

Partition table entries are not in disk order.


Disk /dev/loop8: 46.96 MiB, 49242112 bytes, 96176 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/loop9: 47.99 MiB, 50323456 bytes, 98288 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/xvdf: 50 GiB, 53687091200 bytes, 104857600 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes

To see the specific partition table:

root@ip-172-31-29-55:~# fdisk -l /dev/xvdf
Disk /dev/xvdf: 50 GiB, 53687091200 bytes, 104857600 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes

--------------------------------------------------------------------------------------------------------------------------------------------

Note :

Linux represents the primary partitions as the drive name, plus the numbers 1 through 4. For example, the first primary partition on the first drive is /dev/sda1 . The logical partitions are numbered starting at 5, so the first logical partition on that same drive is /dev/sda5 

Primary Partition : it is mainly used for OS
Extended : for data storage and any no of partition we can use which is not bootable

fdisk /dev/xvdf

Command (m for help): n
Partition type
   p   primary (0 primary, 0 extended, 4 free)
   e   extended (container for logical partitions)
Select (default p): p
Partition number (1-4, default 1): 1
First sector (2048-104857599, default 2048): 2048
Last sector, +/-sectors or +/-size{K,M,G,T,P} (2048-104857599, default 104857599): +25G


This is how we create partitions

root@ip-172-31-29-55:~# lsblk
NAME     MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0      7:0    0 25.1M  1 loop /snap/amazon-ssm-agent/5656
loop1      7:1    0 55.6M  1 loop /snap/core18/2560
loop2      7:2    0 55.6M  1 loop /snap/core18/2566
loop3      7:3    0   62M  1 loop /snap/core20/1611
loop4      7:4    0 63.2M  1 loop /snap/core20/1623
loop5      7:5    0 79.9M  1 loop /snap/lxd/22923
loop6      7:6    0  103M  1 loop /snap/lxd/23541
loop8      7:8    0   47M  1 loop /snap/snapd/16292
loop9      7:9    0   48M  1 loop /snap/snapd/16778
xvda     202:0    0    8G  0 disk
├─xvda1  202:1    0  7.9G  0 part /
├─xvda14 202:14   0    4M  0 part
└─xvda15 202:15   0  106M  0 part /boot/efi
xvdf     202:80   0   50G  0 disk
├─xvdf1  202:81   0   20G  0 part
└─xvdf2  202:82   0    5G  0 part

Note :

To fix such partition order problems, and assign sda4 to the newly created partition, issue the ‘x‘ to enter an extra functionality section and then enter ‘f‘ expert command to fix the order of partition

xvdf     202:80   0   50G  0 disk
├─xvdf1  202:81   0   20G  0 part
└─xvdf2  202:82   0    5G  0 part

This is how we format partition:

It will create the file system we want mkfs : make file system and the name of the drive which we want to do so.

root@ip-172-31-29-55:~# mkfs.ext4 /dev/xvdf2
mke2fs 1.46.5 (30-Dec-2021)
Creating filesystem with 1310720 4k blocks and 327680 inodes
Filesystem UUID: a6b5f312-f98c-4a39-bc4d-3a0cab0ac712
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376, 294912, 819200, 884736

Allocating group tables: done
Writing inode tables: done
Creating journal (16384 blocks): done
Writing superblocks and filesystem accounting information: done

Then again lsblk to check the tree 

root@ip-172-31-29-55:~# lsblk
NAME     MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0      7:0    0 25.1M  1 loop /snap/amazon-ssm-agent/5656
loop1      7:1    0 55.6M  1 loop /snap/core18/2560
loop2      7:2    0 55.6M  1 loop /snap/core18/2566
loop3      7:3    0   62M  1 loop /snap/core20/1611
loop4      7:4    0 63.2M  1 loop /snap/core20/1623
loop5      7:5    0 79.9M  1 loop /snap/lxd/22923
loop6      7:6    0  103M  1 loop /snap/lxd/23541
loop8      7:8    0   47M  1 loop /snap/snapd/16292
loop9      7:9    0   48M  1 loop /snap/snapd/16778
xvda     202:0    0    8G  0 disk
├─xvda1  202:1    0  7.9G  0 part /
├─xvda14 202:14   0    4M  0 part
└─xvda15 202:15   0  106M  0 part /boot/efi
xvdf     202:80   0   50G  0 disk
├─xvdf1  202:81   0   20G  0 part
└─xvdf2  202:82   0    5G  0 part

Mounting the file system with mount command

root@ip-172-31-29-55:~# mount /dev/xvdf1 /root/data1

root@ip-172-31-29-55:~# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/root       7.6G  2.7G  5.0G  36% /
tmpfs           484M     0  484M   0% /dev/shm
tmpfs           194M  852K  193M   1% /run
tmpfs           5.0M     0  5.0M   0% /run/lock
/dev/xvda15     105M  5.3M  100M   5% /boot/efi
tmpfs            97M  4.0K   97M   1% /run/user/1000
/dev/xvdf1       20G   24K   19G   1% /root/data1

see now it is mounted :

But this mounting is temporary in nature we need to make entry in the file called

vim /etc/fstab

By following below syntax

mounted partition        [ space ]         directory      [ space ]           file system type          [ space ]          defaults         [ space ]         0            [ space ]             0 

for example:

/dev/xvdf1 /root/data1 ext4 defaults 0 0
and save it and then type

mount -a

means for permanent mounting

p is to print the partition table:

Command (m for help): p
Disk /dev/xvdf: 50 GiB, 53687091200 bytes, 104857600 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x1cef2ba4

Device     Boot    Start      End  Sectors Size Id Type
/dev/xvdf1          2048 41945087 41943040  20G 83 Linux
/dev/xvdf2      41945088 52430847 10485760   5G 83 Linux


DF :

df displays the amount of disk space available on the file system containing each file name argument.  If no file name is given, the space available on all currently  mounted  file  systems  is
shown.   Disk  space is shown in 1K blocks by default, unless the environment variable POSIXLY_CORRECT is set, in which case
512-byte blocks are use.

It doesnot show unmounted file syetem.

root@ip-172-31-29-55:~# man df
root@ip-172-31-29-55:~# df
Filesystem     1K-blocks    Used Available Use% Mounted on
/dev/root        7941576 2779128   5146064  36% /
tmpfs             494696       0    494696   0% /dev/shm
tmpfs             197880     844    197036   1% /run
tmpfs               5120       0      5120   0% /run/lock
/dev/xvda15       106858    5329    101529   5% /boot/efi
tmpfs              98936       4     98932   1% /run/user/1000
root@ip-172-31-29-55:~# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/root       7.6G  2.7G  5.0G  36% /
tmpfs           484M     0  484M   0% /dev/shm
tmpfs           194M  844K  193M   1% /run
tmpfs           5.0M     0  5.0M   0% /run/lock
/dev/xvda15     105M  5.3M  100M   5% /boot/efi
tmpfs            97M  4.0K   97M   1% /run/user/1000
root@ip-172-31-29-55:~# df -H
Filesystem      Size  Used Avail Use% Mounted on
/dev/root       8.2G  2.9G  5.3G  36% /
tmpfs           507M     0  507M   0% /dev/shm
tmpfs           203M  865k  202M   1% /run
tmpfs           5.3M     0  5.3M   0% /run/lock
/dev/xvda15     110M  5.5M  104M   5% /boot/efi
tmpfs           102M  4.1k  102M   1% /run/user/1000
root@ip-172-31-29-55:~# df -T
Filesystem     Type  1K-blocks    Used Available Use% Mounted on
/dev/root      ext4    7941576 2779128   5146064  36% /
tmpfs          tmpfs    494696       0    494696   0% /dev/shm
tmpfs          tmpfs    197880     844    197036   1% /run
tmpfs          tmpfs      5120       0      5120   0% /run/lock
/dev/xvda15    vfat     106858    5329    101529   5% /boot/efi
tmpfs          tmpfs     98936       4     98932   1% /run/user/1000

Reference: https://www.tecmint.com/how-to-check-disk-space-in-linux/

This three are the most important option which we use in day to day life for disk space.

du:
Disk Usage:

The Linux “du” (Disk Usage) is a standard Unix/Linux command, used to check the information of disk usage of files and directories on a machine.

root@ip-172-31-27-248:~# du -h /var/tmp/db_load
9.3M    /var/tmp/db_load
root@ip-172-31-27-248:~# du -sh /var/tmp/db_load
9.3M    /var/tmp/db_load
root@ip-172-31-27-248:~# du -sch /var/tmp/db_load
9.3M    /var/tmp/db_load
9.3M    total
root@ip-172-31-27-248:~# du -ah --time /var/tmp/db_load/ | head -5
396K    2022-07-08 04:43        /var/tmp/db_load/md5_scv.log
52K     2021-04-19 05:20        /var/tmp/db_load/full_md5.sql
4.0K    2021-11-24 05:24        /var/tmp/db_load/resilincscrm_202111221730_survey_md5.out
4.0K    2022-04-27 11:17        /var/tmp/db_load/trend_27042022.sql
12K     2022-08-04 06:37        /var/tmp/db_load/md5_40.sql

Note : -a option is for all directories
       -s option is to summarise and show total
	   -c is for total
	   -k ,-m: kb and mb
       --time: time modified

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

DMESG:
The dmesg command is a Linux utility that displays kernel-related messages retrieved from the kernel ring buffer
---------------------------------------------------------------------------------------------------------------------------------------------------------------

Swap command:
---------------
Swap is a space on a disk that is used when the amount of physical RAM memory is full. When a Linux system runs out of RAM, inactive pages are moved from the RAM to the swap space.

1. free -m : you will get the memory and if you want to use your hardisk and allocate to freespace.
2. dd if=/dev/zero of=/newswap bs=1M count=1024
3. chmod go-r newswap
4. mkswap /newswap
5. swapon /newswap
6. swapoff /newswap
-------------------

/dev/zero is used to create dummy files or swap
---------------------------------------------------------------------------------------------------------------------------------------------------------------

How to create LVM partition in linux?

It has an advnatage we can extend and shrink as per the requirement in data disk and it involves some steps .

root@ip-172-31-29-55:~# fdisk -l /dev/xvdf
Disk /dev/xvdf: 50 GiB, 53687091200 bytes, 104857600 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x1cef2ba4


So here we are going to partition this 50GB disk.

Note : if pvcreate command is not avaialble then use sudo apt install lvm2 -y

pvcreate <device path>

root@ip-172-31-29-55:~# pvcreate /dev/xvdf
WARNING: dos signature detected on /dev/xvdf at offset 510. Wipe it? [y/n]: y
  Wiping dos signature on /dev/xvdf.
  Physical volume "/dev/xvdf" successfully created.
root@ip-172-31-29-55:~# pvs
  PV         VG Fmt  Attr PSize  PFree
  /dev/xvdf     lvm2 ---  50.00g 50.00g
root@ip-172-31-29-55:~# pvscan
  PV /dev/xvdf                      lvm2 [50.00 GiB]
root@ip-172-31-29-55:~# pvdisplay /dev/xvdf
  "/dev/xvdf" is a new physical volume of "50.00 GiB"
  --- NEW Physical volume ---
  PV Name               /dev/xvdf
  VG Name
  PV Size               50.00 GiB
  Allocatable           NO
  PE Size               0
  Total PE              0
  Free PE               0
  Allocated PE          0
  PV UUID               dazhYq-Eyje-AZRu-fnF1-nf3n-bs7W-peOKDn


vgecreate <volumename> <pvcreated path>

root@ip-172-31-29-55:~# vgcreate volume01 /dev/xvdf
  Volume group "volume01" successfully created
root@ip-172-31-29-55:~#
root@ip-172-31-29-55:~#
root@ip-172-31-29-55:~#
root@ip-172-31-29-55:~# vgs
  VG       #PV #LV #SN Attr   VSize   VFree
  volume01   1   0   0 wz--n- <50.00g <50.00g
root@ip-172-31-29-55:~# vgdisplay
  --- Volume group ---
  VG Name               volume01
  System ID
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  1
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                0
  Open LV               0
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               <50.00 GiB
  PE Size               4.00 MiB
  Total PE              12799
  Alloc PE / Size       0 / 0
  Free  PE / Size       12799 / <50.00 GiB
  VG UUID               FyePCS-i138-1jsb-vCzZ-SXld-Emf1-rEditN

-------------------------------------------------------------------------------------------------------------------------------------------------------------
Logical Volume creation:

lvcreate -L <size> -n <logical volumename> <volumecreatedname>

if we donot denote anything then it is the fixed size and if + or - it is reduce and extend


root@ip-172-31-29-55:~# lvcreate -L 20G -n volumeproject volume01
WARNING: ext4 signature detected on /dev/volume01/volumeproject at offset 1080. Wipe it? [y/n]: y
  Wiping ext4 signature on /dev/volume01/volumeproject.
  Logical volume "volumeproject" created.
  ---------
root@ip-172-31-29-55:~#
root@ip-172-31-29-55:~# lvs
  LV            VG       Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  volumeproject volume01 -wi-a----- 20.00g
root@ip-172-31-29-55:~# lvdisplay
  --- Logical volume ---
  LV Path                /dev/volume01/volumeproject
  LV Name                volumeproject
  VG Name                volume01
  LV UUID                TLoL63-1fim-ouDE-6SOk-fDgp-z44G-Lvkt21
  LV Write Access        read/write
  LV Creation host, time ip-172-31-29-55, 2022-09-15 15:54:41 +0000
  LV Status              available
  # open                 0
  LV Size                20.00 GiB
  Current LE             5120
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:0

-----------------------------------------------

root@ip-172-31-29-55:~# lvcreate -L 15G -n volumebackup volume01
WARNING: ext4 signature detected on /dev/volume01/volumebackup at offset 1080. Wipe it? [y/n]: y
  Wiping ext4 signature on /dev/volume01/volumebackup.
  Logical volume "volumebackup" created.
-----------------

root@ip-172-31-29-55:~# lvdisplay
  --- Logical volume ---
  LV Path                /dev/volume01/volumeproject
  LV Name                volumeproject
  VG Name                volume01
  LV UUID                TLoL63-1fim-ouDE-6SOk-fDgp-z44G-Lvkt21
  LV Write Access        read/write
  LV Creation host, time ip-172-31-29-55, 2022-09-15 15:54:41 +0000
  LV Status              available
  # open                 0
  LV Size                20.00 GiB
  Current LE             5120
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:0

  --- Logical volume ---
  LV Path                /dev/volume01/volumebackup
  LV Name                volumebackup
  VG Name                volume01
  LV UUID                8Dud5L-mVCL-SkrC-IxoS-1iBS-cNTk-cJThYi
  LV Write Access        read/write
  LV Creation host, time ip-172-31-29-55, 2022-09-15 15:57:16 +0000
  LV Status              available
  # open                 0
  LV Size                15.00 GiB
  Current LE             3840
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:1

make file system by taking the path and create directory and mount it.

root@ip-172-31-29-55:~# mkfs.ext4 /dev/volume01/volumeproject
mke2fs 1.46.5 (30-Dec-2021)
Creating filesystem with 5242880 4k blocks and 1310720 inodes
Filesystem UUID: 36e8de97-1a5b-40e6-b4a8-aa0b0909e288
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
        4096000

Allocating group tables: done
Writing inode tables: done
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done

root@ip-172-31-29-55:~# mkfs.ext4 /dev/volume01/volumebackup
mke2fs 1.46.5 (30-Dec-2021)
Creating filesystem with 3932160 4k blocks and 983040 inodes
Filesystem UUID: 56fbbe6d-43c9-4b15-a211-22d07744a076
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208

Allocating group tables: done
Writing inode tables: done
Creating journal (16384 blocks): done
Writing superblocks and filesystem accounting information: done

root@ip-172-31-29-55:~# mkdir /actualdata1
root@ip-172-31-29-55:~# mkdir /actualbackup2

mount <path> folder
umount <path> folder


root@ip-172-31-29-55:~# mount /dev/volume01/volumeproject /actualdata1
root@ip-172-31-29-55:~# mount /dev/volume01/volumebackup /actualbackup2/
root@ip-172-31-29-55:~# df -h
Filesystem                          Size  Used Avail Use% Mounted on
/dev/root                           7.6G  2.7G  4.9G  36% /
tmpfs                               484M     0  484M   0% /dev/shm
tmpfs                               194M  844K  193M   1% /run
tmpfs                               5.0M     0  5.0M   0% /run/lock
/dev/xvda15                         105M  5.3M  100M   5% /boot/efi
tmpfs                                97M  4.0K   97M   1% /run/user/1000
/dev/mapper/volume01-volumeproject   20G   24K   19G   1% /actualdata1
/dev/mapper/volume01-volumebackup    15G   24K   14G   1% /actualbackup2
root@ip-172-31-29-55:~# lsblk
NAME                     MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0                      7:0    0 25.1M  1 loop /snap/amazon-ssm-agent/5656
loop1                      7:1    0 55.6M  1 loop /snap/core18/2560
loop2                      7:2    0 55.6M  1 loop /snap/core18/2566
loop3                      7:3    0   62M  1 loop /snap/core20/1611
loop4                      7:4    0 63.2M  1 loop /snap/core20/1623
loop5                      7:5    0 79.9M  1 loop /snap/lxd/22923
loop6                      7:6    0  103M  1 loop /snap/lxd/23541
loop7                      7:7    0   47M  1 loop /snap/snapd/16292
loop8                      7:8    0   48M  1 loop /snap/snapd/16778
xvda                     202:0    0    8G  0 disk
├─xvda1                  202:1    0  7.9G  0 part /
├─xvda14                 202:14   0    4M  0 part
└─xvda15                 202:15   0  106M  0 part /boot/efi
xvdf                     202:80   0   50G  0 disk
├─volume01-volumeproject 253:0    0   20G  0 lvm  /actualdata1
└─volume01-volumebackup  253:1    0   15G  0 lvm  /actualbackup2

-----------------------------------------------------------------------------------------------------------


root@ip-172-31-29-55:~# lvreduce -L -2.5G -r /dev/volume01/volumeproject
Do you want to unmount "/actualdata1" ? [Y|n] y
fsck from util-linux 2.37.2
/dev/mapper/volume01-volumeproject: 11/1310720 files (0.0% non-contiguous), 126322/5242880 blocks
resize2fs 1.46.5 (30-Dec-2021)
Resizing the filesystem on /dev/mapper/volume01-volumeproject to 4587520 (4k) blocks.
The filesystem on /dev/mapper/volume01-volumeproject is now 4587520 (4k) blocks long.

  Size of logical volume volume01/volumeproject changed from 20.00 GiB (5120 extents) to 17.50 GiB (4480 extents).
  Logical volume volume01/volumeproject successfully resized.
  
root@ip-172-31-29-55:~# lsblk
NAME                     MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0                      7:0    0 25.1M  1 loop /snap/amazon-ssm-agent/5656
loop1                      7:1    0 55.6M  1 loop /snap/core18/2560
loop2                      7:2    0 55.6M  1 loop /snap/core18/2566
loop3                      7:3    0   62M  1 loop /snap/core20/1611
loop4                      7:4    0 63.2M  1 loop /snap/core20/1623
loop5                      7:5    0 79.9M  1 loop /snap/lxd/22923
loop6                      7:6    0  103M  1 loop /snap/lxd/23541
loop7                      7:7    0   47M  1 loop /snap/snapd/16292
loop8                      7:8    0   48M  1 loop /snap/snapd/16778
xvda                     202:0    0    8G  0 disk
├─xvda1                  202:1    0  7.9G  0 part /
├─xvda14                 202:14   0    4M  0 part
└─xvda15                 202:15   0  106M  0 part /boot/efi
xvdf                     202:80   0   50G  0 disk
├─volume01-volumeproject 253:0    0 17.5G  0 lvm  /actualdata1
└─volume01-volumebackup  253:1    0   15G  0 lvm  /actualbackup2
root@ip-172-31-29-55:~# lvextend -l +100%FREE -r /dev/volume01/volumeproject
  Size of logical volume volume01/volumeproject changed from 17.50 GiB (4480 extents) to <35.00 GiB (8959 extents).
  Logical volume volume01/volumeproject successfully resized.
resize2fs 1.46.5 (30-Dec-2021)
Filesystem at /dev/mapper/volume01-volumeproject is mounted on /actualdata1; on-line resizing required
old_desc_blocks = 3, new_desc_blocks = 5
The filesystem on /dev/mapper/volume01-volumeproject is now 9174016 (4k) blocks long.

---------------------------------------------------------------------------------------------------------------------------------

root@ip-172-31-29-55:~# lvreduce -L -10G -r /dev/volume01/volumeproject
Do you want to unmount "/actualdata1" ? [Y|n] y
fsck from util-linux 2.37.2
/dev/mapper/volume01-volumeproject: 11/2293760 files (0.0% non-contiguous), 189030/9174016 blocks
resize2fs 1.46.5 (30-Dec-2021)
Resizing the filesystem on /dev/mapper/volume01-volumeproject to 6552576 (4k) blocks.
The filesystem on /dev/mapper/volume01-volumeproject is now 6552576 (4k) blocks long.

  Size of logical volume volume01/volumeproject changed from <35.00 GiB (8959 extents) to <25.00 GiB (6399 extents).
  Logical volume volume01/volumeproject successfully resized.
root@ip-172-31-29-55:~# lsblk
NAME                     MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0                      7:0    0 25.1M  1 loop /snap/amazon-ssm-agent/5656
loop1                      7:1    0 55.6M  1 loop /snap/core18/2560
loop2                      7:2    0 55.6M  1 loop /snap/core18/2566
loop3                      7:3    0   62M  1 loop /snap/core20/1611
loop4                      7:4    0 63.2M  1 loop /snap/core20/1623
loop5                      7:5    0 79.9M  1 loop /snap/lxd/22923
loop6                      7:6    0  103M  1 loop /snap/lxd/23541
loop7                      7:7    0   47M  1 loop /snap/snapd/16292
loop8                      7:8    0   48M  1 loop /snap/snapd/16778
xvda                     202:0    0    8G  0 disk
├─xvda1                  202:1    0  7.9G  0 part /
├─xvda14                 202:14   0    4M  0 part
└─xvda15                 202:15   0  106M  0 part /boot/efi
xvdf                     202:80   0   50G  0 disk
├─volume01-volumeproject 253:0    0   25G  0 lvm  /actualdata1
└─volume01-volumebackup  253:1    0   15G  0 lvm  /actualbackup2
root@ip-172-31-29-55:~# lvextend -l +100%FREE -r /dev/volume01/volumebackup
  Size of logical volume volume01/volumebackup changed from 15.00 GiB (3840 extents) to 25.00 GiB (6400 extents).
  Logical volume volume01/volumebackup successfully resized.
resize2fs 1.46.5 (30-Dec-2021)
Filesystem at /dev/mapper/volume01-volumebackup is mounted on /actualbackup2; on-line resizing required
old_desc_blocks = 2, new_desc_blocks = 4
The filesystem on /dev/mapper/volume01-volumebackup is now 6553600 (4k) blocks long.

root@ip-172-31-29-55:~# lsblk
NAME                     MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0                      7:0    0 25.1M  1 loop /snap/amazon-ssm-agent/5656
loop1                      7:1    0 55.6M  1 loop /snap/core18/2560
loop2                      7:2    0 55.6M  1 loop /snap/core18/2566
loop3                      7:3    0   62M  1 loop /snap/core20/1611
loop4                      7:4    0 63.2M  1 loop /snap/core20/1623
loop5                      7:5    0 79.9M  1 loop /snap/lxd/22923
loop6                      7:6    0  103M  1 loop /snap/lxd/23541
loop7                      7:7    0   47M  1 loop /snap/snapd/16292
loop8                      7:8    0   48M  1 loop /snap/snapd/16778
xvda                     202:0    0    8G  0 disk
├─xvda1                  202:1    0  7.9G  0 part /
├─xvda14                 202:14   0    4M  0 part
└─xvda15                 202:15   0  106M  0 part /boot/efi
xvdf                     202:80   0   50G  0 disk
├─volume01-volumeproject 253:0    0   25G  0 lvm  /actualdata1
└─volume01-volumebackup  253:1    0   25G  0 lvm  /actualbackup2

------------------------------------------------------------------------------------------------------------------------------------------------------------------

root@ip-172-31-29-55:~# lvreduce -L -20G -r /dev/volume01/volumeproject
Do you want to unmount "/actualdata1" ? [Y|n] y
fsck from util-linux 2.37.2
/dev/mapper/volume01-volumeproject: 11/1638400 files (0.0% non-contiguous), 146882/6552576 blocks
resize2fs 1.46.5 (30-Dec-2021)
Resizing the filesystem on /dev/mapper/volume01-volumeproject to 1309696 (4k) blocks.
The filesystem on /dev/mapper/volume01-volumeproject is now 1309696 (4k) blocks long.

  Size of logical volume volume01/volumeproject changed from <25.00 GiB (6399 extents) to <5.00 GiB (1279 extents).
  Logical volume volume01/volumeproject successfully resized.
root@ip-172-31-29-55:~# lvextend -L +10G -r /dev/volume01/volumebackup
  Size of logical volume volume01/volumebackup changed from 25.00 GiB (6400 extents) to 35.00 GiB (8960 extents).
  Logical volume volume01/volumebackup successfully resized.
resize2fs 1.46.5 (30-Dec-2021)
Filesystem at /dev/mapper/volume01-volumebackup is mounted on /actualbackup2; on-line resizing required
old_desc_blocks = 4, new_desc_blocks = 5
The filesystem on /dev/mapper/volume01-volumebackup is now 9175040 (4k) blocks long.

root@ip-172-31-29-55:~# lsblk
NAME                     MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
loop0                      7:0    0 25.1M  1 loop /snap/amazon-ssm-agent/5656
loop1                      7:1    0 55.6M  1 loop /snap/core18/2560
loop2                      7:2    0 55.6M  1 loop /snap/core18/2566
loop3                      7:3    0   62M  1 loop /snap/core20/1611
loop4                      7:4    0 63.2M  1 loop /snap/core20/1623
loop5                      7:5    0 79.9M  1 loop /snap/lxd/22923
loop6                      7:6    0  103M  1 loop /snap/lxd/23541
loop7                      7:7    0   47M  1 loop /snap/snapd/16292
loop8                      7:8    0   48M  1 loop /snap/snapd/16778
xvda                     202:0    0    8G  0 disk
├─xvda1                  202:1    0  7.9G  0 part /
├─xvda14                 202:14   0    4M  0 part
└─xvda15                 202:15   0  106M  0 part /boot/efi
xvdf                     202:80   0   50G  0 disk
├─volume01-volumeproject 253:0    0    5G  0 lvm  /actualdata1
└─volume01-volumebackup  253:1    0   35G  0 lvm  /actualbackup2


---------------------------------------------------------------------------------------------------------------------------------------------------------------

If we want to remove the all physical logical and volume then:

umount all the things

pvremove <path>
vgremove <path>
lvremove <path>