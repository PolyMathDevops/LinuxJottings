---------------------------------------------------------------------------------------------------
File permissions:

It is the type of the security provided to the file.

While creating the file and it has two owner and first is for the user owner and othe is for group owner.

-rw-r--r--  1 root root    0 Jul 29 17:20 file.txt

In this example we need to change ownership of the files and directory,
change ownership of the file for the user and group for this we need 

Changing ownership can change both user and group and in group only group owner will change thats it.


root@ip-172-31-29-55:~# useradd user100
root@ip-172-31-29-55:~# chown user100:root file.txt
root@ip-172-31-29-55:~# ls -la
total 32
drwx------  4 root    root 4096 Jul 29 17:20 .
drwxr-xr-x 19 root    root 4096 Jul 29 17:14 ..
-rw-------  1 root    root  681 Jul 27 16:27 .bash_history
-rw-r--r--  1 root    root 3106 Oct 15  2021 .bashrc
-rw-------  1 root    root   20 Jul 27 16:27 .lesshst
-rw-r--r--  1 root    root  161 Jul  9  2019 .profile
drwx------  2 root    root 4096 Jul 25 15:55 .ssh
-rw-r--r--  1 user100 root    0 Jul 29 17:20 file.txt
drwx------  4 root    root 4096 Jul 25 15:55 snap

root@ip-172-31-29-55:~# chgrp user100 file.txt
root@ip-172-31-29-55:~# ls -la
total 32
drwx------  4 root    root    4096 Jul 29 17:20 .
drwxr-xr-x 19 root    root    4096 Jul 29 17:14 ..
-rw-------  1 root    root     681 Jul 27 16:27 .bash_history
-rw-r--r--  1 root    root    3106 Oct 15  2021 .bashrc
-rw-------  1 root    root      20 Jul 27 16:27 .lesshst
-rw-r--r--  1 root    root     161 Jul  9  2019 .profile
drwx------  2 root    root    4096 Jul 25 15:55 .ssh
-rw-r--r--  1 user100 user100    0 Jul 29 17:20 file.txt
drwx------  4 root    root    4096 Jul 25 15:55 snap

---------------------------------------------------------------------------------------------------

List of special files in Linux:
-------------------------------------

Normal file :-
directory :d
symbolic links : l
named pipe : p it is only one direction
block device -b
character device -c
socket -s it is like pipes and it work on duplex


Standard permission:

basic table structure for this 
             file    directory number
r(read)       cat      ls        4
w(write)       vi      touch     2
x(execute)     execute  cd       1

Three triplets
1- file
2-4 rwx
5-7 r-x
8-10 r--

For eg : -rwxr-xr-- so permission is 754 in numerical form

-------------------------------------------------------------------
Handson:

root@ip-172-31-29-55:~# mkdir permission
root@ip-172-31-29-55:~# ls
file.txt  permission  snap
root@ip-172-31-29-55:~# ls -la
-rw-r--r--  1 user100 user100    0 Jul 29 17:20 file.txt
drwxr-xr-x  2 root    root    4096 Jul 29 20:33 permission

File type : Normal files as first position is -
            rw- : user
			r--: group
			r-- : others
Same goes to other also.

-------------------------------------------------------------------
Setting permissions:

in character mode see this below example:
In this we have given permission to the file permissions.txt for the each and every bit in which u , g and o is for user group and owner respectively and I played with the comands simultaneously.

root@ip-172-31-29-55:~/permissions# chmod 000 permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
---------- 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod u+rwx permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwx------ 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod g+rw permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwxrw---- 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions#
root@ip-172-31-29-55:~/permissions# chmod o+rwx permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwxrw-rwx 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod 000 permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
---------- 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod u+rwx permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwx------ 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod g+rw permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwxrw---- 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions#
root@ip-172-31-29-55:~/permissions# chmod o+rwx permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwxrw-rwx 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod u-r permission.txt
root@ip-172-31-29-55:~/permissions# ls
permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
--wxrw-rwx 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod u=r permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-r--rw-rwx 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod ugo=w permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
--w--w--w- 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod ugo+rwx permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwxrwxrwx 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod ugo-rwx permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
---------- 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod ugo=rwx permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwxrwxrwx 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod o-wx permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwxrwxr-- 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod a+rwx permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwxrwxrwx 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions#


----------------------------------------------------------------------------------------------------------------------------------------------

Numeric method:
Octal number format : -7
4- read
2- write
1- execute


root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwxrwxrwx 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod 000 permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
---------- 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod 755 permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rwxr-xr-x 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions# chmod 641 permission.txt
root@ip-172-31-29-55:~/permissions# ls -la
total 8
drwxr-xr-x 2 root root 4096 Jul 29 21:00 .
drwx------ 6 root root 4096 Jul 29 21:00 ..
-rw-r----x 1 root root    0 Jul 29 21:00 permission.txt
root@ip-172-31-29-55:~/permissions#


---------------------------------------------------------------------------------------------------
Vimp : UMASK:

The file and directory which we create it already have some permissions right so that is default permissions which is called as umask.

Directory:

Full permission for dir = 777
default permission = 022
so directory = 777-022=755

Files :
file : 666 so why 666 so executable permission is not there in file system so it is for security permissiosn

so same as directory:
 permission for file 666
 default permission - 022
 so file : 666-022 : 644
 
 Note : In octal representations of file permissions, there are actually four digits. The three important digits we've discussed are the last three digits. The first digit is a special file permission indicator, and for this discussion can be considered always to be zero. So from here on out, when we discuss file permission 777, it may also be referred to as 0777.



root@ip-172-31-29-55:~# umask
0022
By default : unix file system is

umask    default file permissions	default directory permissions
0	             rw	                         rwx
1	             rw	                         rw
2	             r	                         rx
3	             r	                         r
4	             w	                         wx
5	             w	                         w
6	             x	                         x
7	          (no permission allowed)	(no permission allowed)

---------------------------------------------------------------------------------------------------
**** Advanced file permission: it basically first bit so lets see

Setuid bit : it is for user
guid bit : it is for group
stciky bit : other user

root@ip-172-31-29-55:~# ll /usr/bin/su
-rwsr-xr-x 1 root root 55672 Feb 21 01:49 /usr/bin/su
4-uid
2-gid
1-sticky

Setuid and setgid are a way for users to run an executable with the permissions of the user (setuid) or group (setgid) who owns the file. For example, if you want a user to be able to perform a specific task that requires root/superuser privileges, but don't want to give them sudo or root access.

Refer link https://www.geeksforgeeks.org/setuid-setgid-and-sticky-bits-in-linux-file-permissions/


root@ip-172-31-29-55:~# chmod u+s /usr/bin/su
root@ip-172-31-29-55:~# chmod 655 /usr/bin/su
root@ip-172-31-29-55:~# chmod u+s /usr/bin/su
root@ip-172-31-29-55:~# ls -ll  /usr/bin/su
-rwSr-xr-x 1 shiv root 55672 Feb 21 01:49 /usr/bin/su
root@ip-172-31-29-55:~# chmod u+x /usr/bin/su
root@ip-172-31-29-55:~# ls -ll  /usr/bin/su
-rwsr-xr-x 1 shiv root 55672 Feb 21 01:49 /usr/bin/su
